xlab("Motif Width") + ylab("Percentage of syntenic families with at least one DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_1.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_1.pdf"), height = 6, width = 12, dpi = 600)
## Percentage (TAB_2)
gg2 = with(TAB_2, TAB_2[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_2$Type.Conservation.2))), rep(levels(TAB_2$Type.Conservation.2), length(widths), sep = " ")))) %>%
ggplot(aes(x = x, y = Mean.Families.Percentage.With.Motifs)) +
geom_point(aes(color = Type.Conservation.2, alpha = Type_mod), size = 3) +
scale_color_manual(values = c("#6f99ad", "#efc000", "#D87758")) +
scale_x_discrete(limits = rev) +
scale_alpha_discrete(range = c(1, 0.5)) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("Percentage of syntenic families with at least one DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1)) +
labs(color = "Conservation level", alpha = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_2.png"), height = 8, width = 15, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_2.pdf"), height = 8, width = 15, dpi = 600)
}
}
}
with(TAB_2, TAB_2[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " "))
with(TAB_2, TAB_2[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_2$Type.Conservation.2))), rep(levels(TAB_2$Type.Conservation.2), length(widths), sep = " "))))
levels(TAB_2$Type.Conservation.2)
TAB_2$Type.Conservation.2
unique(TAB_2$Type.Conservation.2)
View(TAB_1)
#### 4.2 Create the figures.
cat(paste0("\n\nNUMBER/PERCENTAGE OF SYNTENIC FAMILIES WITH MOTIFS --> FIGURES\n\n"))
for (st in strictnesses) {
cat(paste0("-", st, "\n"))
for (no in nonmatches) {
cat(paste0("\t-", no, "\n"))
for (mo in modes) {
cat(paste0("\t\t-", mo, "\n"))
## Load tables
TAB_1 = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_COLLAPSED_1.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_1 = TAB_1[TAB_1$Mode == mo,]
TAB_2 = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_COLLAPSED_2.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_2 = TAB_2[TAB_2$Mode == mo,]
## Convert to factors.
TAB_1$Confidence = factor(TAB_1$Confidence, levels = confidences)
TAB_1$Comparison = factor(TAB_1$Comparison, levels = classes)
TAB_1$Width = factor(TAB_1$Width, levels = widths)
TAB_1$Type_mod = factor(TAB_1$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_2$Confidence = factor(TAB_2$Confidence, levels = confidences)
TAB_2$Comparison = factor(TAB_2$Comparison, levels = classes)
TAB_2$Width = factor(TAB_2$Width, levels = widths)
TAB_2$Type_mod = factor(TAB_2$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_2$Type.Conservation.2 = factor(TAB_2$Type.Conservation.2, levels = c("Low-conserved", "Medium-conserved", "High-conserved"))
## Number (TAB_1)
gg1 = ggplot(TAB_1, aes(x = Width, y = Mean.Families.Number.With.Motifs)) +
geom_point(aes(color = Type_mod), size=4, alpha=0.6) +
scale_color_manual(values = c("#0072b5", "#bc3c29")) +
scale_x_discrete(limits = rev) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width") + ylab("Number of syntenic families with at least one DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_number_1.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_number_1.pdf"), height = 6, width = 12, dpi = 600)
## Number (TAB_2)
gg2 = with(TAB_2, TAB_2[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_2$Type.Conservation.2))), rep(levels(TAB_2$Type.Conservation.2), length(widths), sep = " ")))) %>%
ggplot(aes(x = x, y = Mean.Families.Number.With.Motifs)) +
geom_point(aes(color = Type.Conservation.2, alpha = Type_mod), size = 3) +
scale_color_manual(values = c("#6f99ad", "#efc000", "#D87758")) +
scale_x_discrete(limits = rev) +
scale_alpha_discrete(range = c(1, 0.5)) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("Number of syntenic families with at least one DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1)) +
labs(color = "Conservation level", alpha = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_number_2.png"), height = 8, width = 15, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_number_2.pdf"), height = 8, width = 15, dpi = 600)
## Percentage (TAB_1)
gg1 = ggplot(TAB_1, aes(x = Width, y = Mean.Families.Percentage.With.Motifs)) +
geom_point(aes(color = Type_mod), size=4, alpha=0.6) +
scale_color_manual(values = c("#0072b5", "#bc3c29")) +
scale_x_discrete(limits = rev) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width") + ylab("Percentage of syntenic families with at least one DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_1.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_1.pdf"), height = 6, width = 12, dpi = 600)
## Percentage (TAB_2)
gg2 = with(TAB_2, TAB_2[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_2$Type.Conservation.2))), rep(levels(TAB_2$Type.Conservation.2), length(widths), sep = " ")))) %>%
ggplot(aes(x = x, y = Mean.Families.Percentage.With.Motifs)) +
geom_point(aes(color = Type.Conservation.2, alpha = Type_mod), size = 3) +
scale_color_manual(values = c("#6f99ad", "#efc000", "#D87758")) +
scale_x_discrete(limits = rev) +
scale_alpha_discrete(range = c(1, 0.5)) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("Percentage of syntenic families with at least one DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1)) +
labs(color = "Conservation level", alpha = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_2.png"), height = 8, width = 15, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_2.pdf"), height = 8, width = 15, dpi = 600)
}
}
}
rm(list = c("st", "no", "mo", "gg1", "gg2", "TAB_1", "TAB_2"))
#### 5.2 Create the figures.
cat(paste0("\n\nNUMBER/PERCENTAGE OF SYNTENIC FAMILIES WITH PUTATIVE FUNCTIONAL MOTIFS --> FIGURES\n\n"))
for (st in strictnesses) {
cat(paste0("-", st, "\n"))
for (no in nonmatches) {
cat(paste0("\t-", no, "\n"))
for (mo in modes) {
cat(paste0("\t\t-", mo, "\n"))
## Load tables
TAB_F1 = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_COLLAPSED_1_FUNCTIONAL.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_F1 = TAB_F1[TAB_F1$Mode == mo,]
TAB_F2 = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_COLLAPSED_2_FUNCTIONAL.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_F2 = TAB_F2[TAB_F2$Mode == mo,]
## Convert to factors.
TAB_F1$Confidence = factor(TAB_F1$Confidence, levels = confidences)
TAB_F1$Comparison = factor(TAB_F1$Comparison, levels = classes)
TAB_F1$Width = factor(TAB_F1$Width, levels = widths)
TAB_F1$Type_mod = factor(TAB_F1$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_F2$Confidence = factor(TAB_F2$Confidence, levels = confidences)
TAB_F2$Comparison = factor(TAB_F2$Comparison, levels = classes)
TAB_F2$Width = factor(TAB_F2$Width, levels = widths)
TAB_F2$Type_mod = factor(TAB_F2$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_F2$Type.Conservation.2 = factor(TAB_F2$Type.Conservation.2, levels = c("Low-conserved", "Medium-conserved", "High-conserved"))
## Number (TAB_F1)
gg1 = ggplot(TAB_F1, aes(x = Width, y = Mean.Families.Number.With.Motifs)) +
geom_point(aes(color = Type_mod), size=4, alpha=0.6) +
scale_color_manual(values = c("#0072b5", "#bc3c29")) +
scale_x_discrete(limits = rev) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width") + ylab("Number of syntenic families with at least one functional DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_number_1_FUNCTIONAL.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_number_1_FUNCTIONAL.pdf"), height = 6, width = 12, dpi = 600)
## Number (TAB_F2)
gg2 = with(TAB_F2, TAB_F2[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_F2$Type.Conservation.2))), rep(levels(TAB_F2$Type.Conservation.2), length(widths), sep = " ")))) %>%
ggplot(aes(x = x, y = Mean.Families.Number.With.Motifs)) +
geom_point(aes(color = Type.Conservation.2, alpha = Type_mod), size = 3) +
scale_color_manual(values = c("#6f99ad", "#efc000", "#D87758")) +
scale_x_discrete(limits = rev) +
scale_alpha_discrete(range = c(1, 0.5)) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("Number of syntenic families with at least one functional DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1)) +
labs(color = "Conservation level", alpha = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_number_2_FUNCTIONAL.png"), height = 8, width = 15, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_number_2_FUNCTIONAL.pdf"), height = 8, width = 15, dpi = 600)
## Percentage (TAB_F1)
gg1 = ggplot(TAB_F1, aes(x = Width, y = Mean.Families.Percentage.With.Motifs)) +
geom_point(aes(color = Type_mod), size=4, alpha=0.6) +
scale_color_manual(values = c("#0072b5", "#bc3c29")) +
scale_x_discrete(limits = rev) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width") + ylab("Percentage of syntenic families with at least one functional DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_1_FUNCTIONAL.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_1_FUNCTIONAL.pdf"), height = 6, width = 12, dpi = 600)
## Percentage (TAB_F2)
gg2 = with(TAB_F2, TAB_F2[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_F2$Type.Conservation.2))), rep(levels(TAB_F2$Type.Conservation.2), length(widths), sep = " ")))) %>%
ggplot(aes(x = x, y = Mean.Families.Percentage.With.Motifs)) +
geom_point(aes(color = Type.Conservation.2, alpha = Type_mod), size = 3) +
scale_color_manual(values = c("#6f99ad", "#efc000", "#D87758")) +
scale_x_discrete(limits = rev) +
scale_alpha_discrete(range = c(1, 0.5)) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("Percentage of syntenic families with at least one functional DNA motif") +
coord_flip() +
guides(color = guide_legend(nrow = 1)) +
labs(color = "Conservation level", alpha = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_2_FUNCTIONAL.png"), height = 8, width = 15, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_percentage_2_FUNCTIONAL.pdf"), height = 8, width = 15, dpi = 600)
}
}
}
rm(list = c("st", "no", "mo", "gg1", "gg2", "TAB_F1", "TAB_F2"))
#### 6.2 Create the figures.
cat(paste0("\n\nGC CONTENT, LENGTH AND E-VALUE MOTIFS ANALYSIS --> FIGURES\n\n"))
for (st in strictnesses) {
cat(paste0("-", st, "\n"))
for (no in nonmatches) {
cat(paste0("\t-", no, "\n"))
for (mo in modes) {
cat(paste0("\t\t-", mo, "\n"))
## Load tables
TAB_GC = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_GC.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_GC = TAB_GC[TAB_GC$Mode == mo,]
TAB_Length = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_LENGTH.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_Length = TAB_Length[TAB_Length$Mode == mo,]
TAB_E_value = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_E_VALUE.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_E_value = TAB_E_value[TAB_E_value$Mode == mo,]
## Convert to factors.
TAB_GC$Confidence = factor(TAB_GC$Confidence, levels = confidences)
TAB_GC$Comparison = factor(TAB_GC$Comparison, levels = classes)
TAB_GC$Width = factor(TAB_GC$Width, levels = widths)
TAB_GC$Type_mod = factor(TAB_GC$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_GC$Type.Conservation.2 = factor(TAB_GC$Type.Conservation.2, levels = c("Low-conserved", "Medium-conserved", "High-conserved"))
TAB_GC$Type.Conservation.3 = factor(TAB_GC$Type.Conservation.3, levels = 2:9)
TAB_Length$Confidence = factor(TAB_Length$Confidence, levels = confidences)
TAB_Length$Comparison = factor(TAB_Length$Comparison, levels = classes)
TAB_Length$Width = factor(TAB_Length$Width, levels = widths)
TAB_Length$Type_mod = factor(TAB_Length$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_Length$Type.Conservation.2 = factor(TAB_Length$Type.Conservation.2, levels = c("Low-conserved", "Medium-conserved", "High-conserved"))
TAB_Length$Type.Conservation.3 = factor(TAB_Length$Type.Conservation.3, levels = 2:9)
TAB_E_value$Confidence = factor(TAB_E_value$Confidence, levels = confidences)
TAB_E_value$Comparison = factor(TAB_E_value$Comparison, levels = classes)
TAB_E_value$Width = factor(TAB_E_value$Width, levels = widths)
TAB_E_value$Type_mod = factor(TAB_E_value$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_E_value$Type.Conservation.2 = factor(TAB_E_value$Type.Conservation.2, levels = c("Low-conserved", "Medium-conserved", "High-conserved"))
TAB_E_value$Type.Conservation.3 = factor(TAB_E_value$Type.Conservation.3, levels = 2:9)
## GC (1)
cat(paste0("\t\t\t-GC (1)\n"))
ggA1 = ggplot(TAB_GC, aes(x = Mean.Meme_Motif.GC, y = Width)) +
geom_density_ridges(aes(fill = Type_mod), alpha=.4) +
scale_fill_manual(values = c("#0072b5", "#bc3c29")) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("GC content (%)") + ylab("Density") +
guides(color = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_GC_1.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_GC_1.pdf"), height = 6, width = 12, dpi = 600)
## GC (2)
cat(paste0("\t\t\t-GC (2)\n"))
ggA2 = with(TAB_GC, TAB_GC[order(Width, Type.Conservation.1),]) %>%
mutate(x = paste(Width, Type.Conservation.1, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_GC$Type.Conservation.1))), rep(levels(TAB_GC$Type.Conservation.1), length(widths), sep = " ")))) %>%
ggplot(aes(x = Mean.Meme_Motif.GC, y = x)) +
geom_density_ridges(aes(fill = Type_mod), alpha=.4) +
scale_fill_manual(values = c("#0072b5", "#bc3c29")) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("Density") +
guides(color = guide_legend(nrow = 1)) +
labs(fill = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_GC_2.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_GC_2.pdf"), height = 6, width = 12, dpi = 600)
## Length (1)
cat(paste0("\t\t\t-Length (1)\n"))
ggB1 = ggplot(TAB_Length, aes(x = Width, y = Meme_Motif.Width, fill = Type_mod)) +
geom_boxplot(aes(fill = Type_mod), size = 0.2, colour = "black", outlier.size = 0.25, position = position_dodge2(width = 0.9, preserve = "single")) +
stat_summary(fun = mean, geom = "point", aes(group = Type_mod), shape = 20, size = 1.2, color = "black", fill = "black", position = position_dodge2(width = 0.75, preserve = "single")) +
scale_fill_manual(values = c("#0072b5", "#bc3c29")) +
scale_x_discrete(limits = rev) +
facet_grid(Confidence ~ Comparison) +
theme_bw() +
xlab("Motif Width") + ylab("Length") +
coord_flip() +
guides(fill = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_Length_1.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_Length_1.pdf"), height = 6, width = 12, dpi = 600)
## Length (2)
cat(paste0("\t\t\t-Length (2)\n"))
ggB2 = with(TAB_Length, TAB_Length[order(Width, Type.Conservation.1),]) %>%
mutate(x = paste(Width, Type.Conservation.1, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_Length$Type.Conservation.1))), rep(levels(TAB_Length$Type.Conservation.1), length(widths), sep = " ")))) %>%
ggplot(aes(x = x, y = Meme_Motif.Width, fill = Type.Conservation.1, alpha = Type_mod)) +
geom_boxplot(aes(fill = Type.Conservation.1, alpha = Type_mod), size = 0.2, colour = "black", outlier.size = 0.25, position = position_dodge2(width = 0.9, preserve = "single")) +
stat_summary(fun = mean, geom = "point", aes(fill = Type.Conservation.1, alpha = Type_mod), shape = 20, size = 1.2, color = "black", fill = "black", position = position_dodge2(width = 0.75, preserve = "single")) +
scale_fill_manual(values = c("#6f99ad", "#efc000", "#D87758")) +
scale_alpha_discrete(range = c(1, 0.5)) +
scale_x_discrete(limits = rev) +
facet_grid(Confidence ~ Comparison) +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("Length") +
coord_flip() +
guides(fill = guide_legend(nrow = 1)) +
labs(fill = "Conservation level", alpha = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_Length_2.png"), height = 8, width = 15, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_Length_2.pdf"), height = 8, width = 15, dpi = 600)
## E-value (1)
cat(paste0("\t\t\t-E_value (1)\n"))
ggC1 = ggplot(TAB_E_value, aes(x = Width, y = `-Log10.Meme_Motif.E.value`, fill = Type_mod)) +
geom_boxplot(aes(fill = Type_mod), size = 0.2, colour = "black", outlier.size = 0.25, position = position_dodge2(width = 0.9, preserve = "single")) +
stat_summary(fun = mean, geom = "point", aes(group = Type_mod), shape = 20, size = 1.2, color = "black", fill = "black", position = position_dodge2(width = 0.75, preserve = "single")) +
scale_fill_manual(values = c("#0072b5", "#bc3c29")) +
scale_x_discrete(limits = rev) +
scale_y_continuous(limits = c(0, 80)) +
facet_grid(Confidence ~ Comparison) +
theme_bw() +
xlab("Motif Width") + ylab("-Log10(E-value)") +
coord_flip() +
guides(fill = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_E_value_1.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_E_value_1.pdf"), height = 6, width = 12, dpi = 600)
## E-value (2)
cat(paste0("\t\t\t-E_value (2)\n"))
ggC2 = with(TAB_E_value, TAB_E_value[order(Width, Type.Conservation.1),]) %>%
mutate(x = paste(Width, Type.Conservation.1, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_E_value$Type.Conservation.1))), rep(levels(TAB_E_value$Type.Conservation.1), length(widths), sep = " ")))) %>%
ggplot(aes(x = x, y = `-Log10.Meme_Motif.E.value`, fill = Type.Conservation.1, alpha = Type_mod)) +
geom_boxplot(aes(fill = Type.Conservation.1, alpha = Type_mod), size = 0.2, colour = "black", outlier.size = 0.25, position = position_dodge2(width = 0.9, preserve = "single")) +
stat_summary(fun = mean, geom = "point", aes(fill = Type.Conservation.1, alpha = Type_mod), shape = 20, size = 1.2, color = "black", fill = "black", position = position_dodge2(width = 0.75, preserve = "single")) +
scale_fill_manual(values = c("#6f99ad", "#efc000", "#D87758")) +
scale_alpha_discrete(range = c(1, 0.5)) +
scale_x_discrete(limits = rev) +
scale_y_continuous(limits = c(0, 80)) +
facet_grid(Confidence ~ Comparison) +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("-Log10(E-value)") +
coord_flip() +
guides(fill = guide_legend(nrow = 1)) +
labs(fill = "Conservation level", alpha = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_E_value_2.png"), height = 8, width = 15, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_E_value_2.pdf"), height = 8, width = 15, dpi = 600)
}
}
}
rm(list = c("st", "no", "mo", "ggA1", "ggA2", "ggB1", "ggB2", "ggC1", "ggC2", "TAB_GC", "TAB_Length", "TAB_E_value"))
#### 6.2 Create the figures.
cat(paste0("\n\nGC CONTENT, LENGTH AND E-VALUE MOTIFS ANALYSIS --> FIGURES\n\n"))
for (st in strictnesses) {
cat(paste0("-", st, "\n"))
for (no in nonmatches) {
cat(paste0("\t-", no, "\n"))
for (mo in modes) {
cat(paste0("\t\t-", mo, "\n"))
## Load tables
TAB_GC = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_GC.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_GC = TAB_GC[TAB_GC$Mode == mo,]
TAB_Length = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_LENGTH.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_Length = TAB_Length[TAB_Length$Mode == mo,]
TAB_E_value = read.table(paste0(WD_out, "/Tables/", st, "/", no, "/TABLE_E_VALUE.tsv"), sep = "\t", header = T, quote = "\"", check.names = F)
TAB_E_value = TAB_E_value[TAB_E_value$Mode == mo,]
## Convert to factors.
TAB_GC$Confidence = factor(TAB_GC$Confidence, levels = confidences)
TAB_GC$Comparison = factor(TAB_GC$Comparison, levels = classes)
TAB_GC$Width = factor(TAB_GC$Width, levels = widths)
TAB_GC$Type_mod = factor(TAB_GC$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_GC$Type.Conservation.2 = factor(TAB_GC$Type.Conservation.2, levels = c("Low-conserved", "Medium-conserved", "High-conserved"))
TAB_GC$Type.Conservation.3 = factor(TAB_GC$Type.Conservation.3, levels = 2:9)
TAB_Length$Confidence = factor(TAB_Length$Confidence, levels = confidences)
TAB_Length$Comparison = factor(TAB_Length$Comparison, levels = classes)
TAB_Length$Width = factor(TAB_Length$Width, levels = widths)
TAB_Length$Type_mod = factor(TAB_Length$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_Length$Type.Conservation.2 = factor(TAB_Length$Type.Conservation.2, levels = c("Low-conserved", "Medium-conserved", "High-conserved"))
TAB_Length$Type.Conservation.3 = factor(TAB_Length$Type.Conservation.3, levels = 2:9)
TAB_E_value$Confidence = factor(TAB_E_value$Confidence, levels = confidences)
TAB_E_value$Comparison = factor(TAB_E_value$Comparison, levels = classes)
TAB_E_value$Width = factor(TAB_E_value$Width, levels = widths)
TAB_E_value$Type_mod = factor(TAB_E_value$Type_mod, levels = c("REAL", "SIMULATION"))
TAB_E_value$Type.Conservation.2 = factor(TAB_E_value$Type.Conservation.2, levels = c("Low-conserved", "Medium-conserved", "High-conserved"))
TAB_E_value$Type.Conservation.3 = factor(TAB_E_value$Type.Conservation.3, levels = 2:9)
## GC (1)
cat(paste0("\t\t\t-GC (1)\n"))
ggA1 = ggplot(TAB_GC, aes(x = Mean.Meme_Motif.GC, y = Width)) +
geom_density_ridges(aes(fill = Type_mod), alpha=.4) +
scale_fill_manual(values = c("#0072b5", "#bc3c29")) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("GC content (%)") + ylab("Density") +
guides(color = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_GC_1.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_GC_1.pdf"), height = 6, width = 12, dpi = 600)
## GC (2)
cat(paste0("\t\t\t-GC (2)\n"))
ggA2 = with(TAB_GC, TAB_GC[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_GC$Type.Conservation.2))), rep(levels(TAB_GC$Type.Conservation.2), length(widths), sep = " ")))) %>%
ggplot(aes(x = Mean.Meme_Motif.GC, y = x)) +
geom_density_ridges(aes(fill = Type_mod), alpha=.4) +
scale_fill_manual(values = c("#0072b5", "#bc3c29")) +
facet_grid(Confidence ~ Comparison, scales = "free") +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("Density") +
guides(color = guide_legend(nrow = 1)) +
labs(fill = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_GC_2.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_GC_2.pdf"), height = 6, width = 12, dpi = 600)
## Length (1)
cat(paste0("\t\t\t-Length (1)\n"))
ggB1 = ggplot(TAB_Length, aes(x = Width, y = Meme_Motif.Width, fill = Type_mod)) +
geom_boxplot(aes(fill = Type_mod), size = 0.2, colour = "black", outlier.size = 0.25, position = position_dodge2(width = 0.9, preserve = "single")) +
stat_summary(fun = mean, geom = "point", aes(group = Type_mod), shape = 20, size = 1.2, color = "black", fill = "black", position = position_dodge2(width = 0.75, preserve = "single")) +
scale_fill_manual(values = c("#0072b5", "#bc3c29")) +
scale_x_discrete(limits = rev) +
facet_grid(Confidence ~ Comparison) +
theme_bw() +
xlab("Motif Width") + ylab("Length") +
coord_flip() +
guides(fill = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_Length_1.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_Length_1.pdf"), height = 6, width = 12, dpi = 600)
## Length (2)
cat(paste0("\t\t\t-Length (2)\n"))
ggB2 = with(TAB_Length, TAB_Length[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_Length$Type.Conservation.2))), rep(levels(TAB_Length$Type.Conservation.2), length(widths), sep = " ")))) %>%
ggplot(aes(x = x, y = Meme_Motif.Width, fill = Type.Conservation.2, alpha = Type_mod)) +
geom_boxplot(aes(fill = Type.Conservation.2, alpha = Type_mod), size = 0.2, colour = "black", outlier.size = 0.25, position = position_dodge2(width = 0.9, preserve = "single")) +
stat_summary(fun = mean, geom = "point", aes(fill = Type.Conservation.2, alpha = Type_mod), shape = 20, size = 1.2, color = "black", fill = "black", position = position_dodge2(width = 0.75, preserve = "single")) +
scale_fill_manual(values = c("#6f99ad", "#efc000", "#D87758")) +
scale_alpha_discrete(range = c(1, 0.5)) +
scale_x_discrete(limits = rev) +
facet_grid(Confidence ~ Comparison) +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("Length") +
coord_flip() +
guides(fill = guide_legend(nrow = 1)) +
labs(fill = "Conservation level", alpha = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_Length_2.png"), height = 8, width = 15, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_Length_2.pdf"), height = 8, width = 15, dpi = 600)
## E-value (1)
cat(paste0("\t\t\t-E_value (1)\n"))
ggC1 = ggplot(TAB_E_value, aes(x = Width, y = `-Log10.Meme_Motif.E.value`, fill = Type_mod)) +
geom_boxplot(aes(fill = Type_mod), size = 0.2, colour = "black", outlier.size = 0.25, position = position_dodge2(width = 0.9, preserve = "single")) +
stat_summary(fun = mean, geom = "point", aes(group = Type_mod), shape = 20, size = 1.2, color = "black", fill = "black", position = position_dodge2(width = 0.75, preserve = "single")) +
scale_fill_manual(values = c("#0072b5", "#bc3c29")) +
scale_x_discrete(limits = rev) +
scale_y_continuous(limits = c(0, 80)) +
facet_grid(Confidence ~ Comparison) +
theme_bw() +
xlab("Motif Width") + ylab("-Log10(E-value)") +
coord_flip() +
guides(fill = guide_legend(nrow = 1, title = "Dataset")) +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_E_value_1.png"), height = 6, width = 12, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_E_value_1.pdf"), height = 6, width = 12, dpi = 600)
## E-value (2)
cat(paste0("\t\t\t-E_value (2)\n"))
ggC2 = with(TAB_E_value, TAB_E_value[order(Width, Type.Conservation.2),]) %>%
mutate(x = paste(Width, Type.Conservation.2, sep = " ")) %>%
mutate(x = factor(x, levels = paste(rep(widths, each = length(levels(TAB_E_value$Type.Conservation.2))), rep(levels(TAB_E_value$Type.Conservation.2), length(widths), sep = " ")))) %>%
ggplot(aes(x = x, y = `-Log10.Meme_Motif.E.value`, fill = Type.Conservation.2, alpha = Type_mod)) +
geom_boxplot(aes(fill = Type.Conservation.2, alpha = Type_mod), size = 0.2, colour = "black", outlier.size = 0.25, position = position_dodge2(width = 0.9, preserve = "single")) +
stat_summary(fun = mean, geom = "point", aes(fill = Type.Conservation.2, alpha = Type_mod), shape = 20, size = 1.2, color = "black", fill = "black", position = position_dodge2(width = 0.75, preserve = "single")) +
scale_fill_manual(values = c("#6f99ad", "#efc000", "#D87758")) +
scale_alpha_discrete(range = c(1, 0.5)) +
scale_x_discrete(limits = rev) +
scale_y_continuous(limits = c(0, 80)) +
facet_grid(Confidence ~ Comparison) +
theme_bw() +
xlab("Motif Width and Positional conservation level") + ylab("-Log10(E-value)") +
coord_flip() +
guides(fill = guide_legend(nrow = 1)) +
labs(fill = "Conservation level", alpha = "Dataset") +
theme(panel.background = element_blank()) +
theme(legend.position = "top")
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_E_value_2.png"), height = 8, width = 15, dpi = 600)
ggsave(paste0(WD_out, "/Figures/", st, "/", no, "/FIGURE_E_value_2.pdf"), height = 8, width = 15, dpi = 600)
}
}
}
rm(list = c("st", "no", "mo", "ggA1", "ggA2", "ggB1", "ggB2", "ggC1", "ggC2", "TAB_GC", "TAB_Length", "TAB_E_value"))
