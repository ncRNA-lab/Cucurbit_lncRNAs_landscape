axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_text(size = 22, face = "bold.italic"),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(5.5, 5.5, 0, 5.5))
rm(list = c("GC_content"))
#### EXON NUMBER A
cat(paste0("\n\t\t-EXON NUMBER A..."))
# Grid
Exon_number = TAB_LONG_FINAL_MOD[TAB_LONG_FINAL_MOD$Feature == "Exon number",]
gg2 = ggplot(Exon_number, aes(x = Class_code, y = Value, fill = Class_code)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ece68f", "#decfa9", "#dcb8b8", "#b5cf9b", "#ca9bcf")) +
facet_grid(Feature~Type.1) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("Exon number") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Exon_number"))
#### LENGTH A
cat(paste0("\n\t\t-LENGTH A..."))
# Grid
Length = TAB_LONG_FINAL_MOD[TAB_LONG_FINAL_MOD$Feature == "Length",]
gg3 = ggplot(Length, aes(x = Class_code, y = Value, fill = Class_code)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ece68f", "#decfa9", "#dcb8b8", "#b5cf9b", "#ca9bcf")) +
facet_grid(Feature~Type.1) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("Length") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Length"))
#### EXPRESSION A
cat(paste0("\n\t\t-EXPRESSION A..."))
# Grid
Expression = TAB_LONG_FINAL_MOD[TAB_LONG_FINAL_MOD$Feature == "Expression",]
gg4 = ggplot(Expression, aes(x = Class_code, y = Value, fill = Class_code)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ece68f", "#decfa9", "#dcb8b8", "#b5cf9b", "#ca9bcf")) +
facet_grid(Feature~Type.1) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("TPM") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Expression"))
#### REPEAT CONTENT A
cat(paste0("\n\t\t-REPEAT CONTENT A..."))
# Grid
Repeat_content = TAB_LONG_FINAL_MOD[TAB_LONG_FINAL_MOD$Feature == "Repeat content",]
gg5 = ggplot(Repeat_content, aes(x = Class_code, y = Value, fill = Class_code)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(
labels = c("PC genes", "lincRNAs", "NAT-lncRNAs", "int-lncRNAs", "SOT-lncRNAs", "Intergenic regions"),
values = c("#a2ded9", "#ece68f", "#decfa9", "#dcb8b8", "#b5cf9b", "#ca9bcf")
) +
facet_grid(Feature~Type.1) +
xlab("") +
ylab("Repeat content (%)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 5.5, 5.5))
rm(list = c("Repeat_content"))
#### GC CONTENT B
cat(paste0("\n\t\t-GC CONTENT B..."))
# Grid
GC_content = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "GC content",]
gg6 = ggplot(GC_content, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#ece68f")) +
facet_grid(Feature~"ALL") +
xlab("") +
ylab("GC content (%)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_text(size = 22, face = "bold.italic"),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(5.5, 5.5, 0, 5.5))
rm(list = c("GC_content"))
#### EXON NUMBER B
cat(paste0("\n\t\t-EXON NUMBER B..."))
# Grid
Exon_number = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "Exon number",]
gg7 = ggplot(Exon_number, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#ece68f")) +
facet_grid(Feature~.) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("Exon number") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Exon_number"))
#### LENGTH B
cat(paste0("\n\t\t-LENGTH B..."))
# Grid
Length = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "Length",]
gg8 = ggplot(Length, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#ece68f")) +
facet_grid(Feature~.) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("Length") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Length"))
#### EXPRESSION B
cat(paste0("\n\t\t-EXPRESSION B..."))
# Grid
Expression = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "Expression",]
gg9 = ggplot(Expression, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#ece68f")) +
facet_grid(Feature~.) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("TPM") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Expression"))
#### REPEAT CONTENT B
cat(paste0("\n\t\t-REPEAT CONTENT B..."))
# Grid
Repeat_content = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "Repeat content",]
gg10 = ggplot(Repeat_content, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(
labels = c("PC genes", "LC-lncRNAs", "MC-lncRNAs", "HC-lncRNAs", "Intergenic regions"),
values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#ece68f")
) +
facet_grid(Feature~.) +
xlab("") +
ylab("Repeat content (%)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 5.5, 5.5))
rm(list = c("Repeat_content"))
#### FIGURE FEATURES
# Si tenemos valores de NA para ciertos transcritos, como es el caso de intergenic regions en numero de exones, se generara
# el siguiente error:
# 1: Removed 169902 rows containing non-finite values (`stat_boxplot()`).
# 2: Removed 169902 rows containing non-finite values (`stat_summary()`).
# Tambien puede ocurrir que tengas valores iguales a cero como en el caso de TPM. el valor 0 en escala logaritmica tiende a
# -Inf. Por tanto como la escala del eje y es en escala logaritmica simplemente te da el aviso de que hay valores que transformados
# a logaritmo serian -Inf.
# 5: Transformation introduced infinite values in continuous y-axis.
cat(paste0("\n\t\t-ALL FEATURES A AND B..."))
gg_A = ggarrange(gg1, gg2, gg3, gg4, gg5, ncol = 1, heights = c(0.21, 0.20, 0.20, 0.20, 0.19))
gg_B = ggarrange(gg6, gg7, gg8, gg9, gg10, ncol = 1, heights = c(0.21, 0.20, 0.20, 0.20, 0.19))
gg_final = ggarrange(gg_A, ggparagraph(text="   ", face = "italic", size = 16, color = "black"), gg_B, ncol = 3, widths = c(0.65, 0.08, 0.27))
ggsave(paste0(WD, "/ALL/FINAL-COLLAPSE-NR.png"), height = 25, width = 25, dpi = 600)
ggsave(paste0(WD, "/ALL/FINAL-COLLAPSE-NR.pdf"), height = 25, width = 25, dpi = 600)
#### GC CONTENT A
cat(paste0("\n\t\t-GC CONTENT A..."))
# Grid
GC_content = TAB_LONG_FINAL_MOD[TAB_LONG_FINAL_MOD$Feature == "GC content",]
gg1 = ggplot(GC_content, aes(x = Class_code, y = Value, fill = Class_code)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ece68f", "#decfa9", "#dcb8b8", "#b5cf9b", "#ca9bcf")) +
facet_grid(Feature~Type.1) +
xlab("") +
ylab("GC content (%)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_text(size = 22, face = "bold.italic"),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(5.5, 5.5, 0, 5.5))
rm(list = c("GC_content"))
#### EXON NUMBER A
cat(paste0("\n\t\t-EXON NUMBER A..."))
# Grid
Exon_number = TAB_LONG_FINAL_MOD[TAB_LONG_FINAL_MOD$Feature == "Exon number",]
gg2 = ggplot(Exon_number, aes(x = Class_code, y = Value, fill = Class_code)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ece68f", "#decfa9", "#dcb8b8", "#b5cf9b", "#ca9bcf")) +
facet_grid(Feature~Type.1) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("Exon number") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Exon_number"))
#### LENGTH A
cat(paste0("\n\t\t-LENGTH A..."))
# Grid
Length = TAB_LONG_FINAL_MOD[TAB_LONG_FINAL_MOD$Feature == "Length",]
gg3 = ggplot(Length, aes(x = Class_code, y = Value, fill = Class_code)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ece68f", "#decfa9", "#dcb8b8", "#b5cf9b", "#ca9bcf")) +
facet_grid(Feature~Type.1) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("Length") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Length"))
#### EXPRESSION A
cat(paste0("\n\t\t-EXPRESSION A..."))
# Grid
Expression = TAB_LONG_FINAL_MOD[TAB_LONG_FINAL_MOD$Feature == "Expression",]
gg4 = ggplot(Expression, aes(x = Class_code, y = Value, fill = Class_code)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ece68f", "#decfa9", "#dcb8b8", "#b5cf9b", "#ca9bcf")) +
facet_grid(Feature~Type.1) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("TPM") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Expression"))
#### REPEAT CONTENT A
cat(paste0("\n\t\t-REPEAT CONTENT A..."))
# Grid
Repeat_content = TAB_LONG_FINAL_MOD[TAB_LONG_FINAL_MOD$Feature == "Repeat content",]
gg5 = ggplot(Repeat_content, aes(x = Class_code, y = Value, fill = Class_code)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(
labels = c("PC genes", "lincRNAs", "NAT-lncRNAs", "int-lncRNAs", "SOT-lncRNAs", "Intergenic regions"),
values = c("#a2ded9", "#ece68f", "#decfa9", "#dcb8b8", "#b5cf9b", "#ca9bcf")
) +
facet_grid(Feature~Type.1) +
xlab("") +
ylab("Repeat content (%)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 5.5, 5.5))
rm(list = c("Repeat_content"))
#### GC CONTENT B
cat(paste0("\n\t\t-GC CONTENT B..."))
# Grid
GC_content = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "GC content",]
gg6 = ggplot(GC_content, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#cf4141")) +
facet_grid(Feature~"ALL") +
xlab("") +
ylab("GC content (%)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_text(size = 22, face = "bold.italic"),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(5.5, 5.5, 0, 5.5))
rm(list = c("GC_content"))
#### EXON NUMBER B
cat(paste0("\n\t\t-EXON NUMBER B..."))
# Grid
Exon_number = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "Exon number",]
gg7 = ggplot(Exon_number, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#cf4141")) +
facet_grid(Feature~.) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("Exon number") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Exon_number"))
#### LENGTH B
cat(paste0("\n\t\t-LENGTH B..."))
# Grid
Length = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "Length",]
gg8 = ggplot(Length, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#cf4141")) +
facet_grid(Feature~.) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("Length") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Length"))
#### EXPRESSION B
cat(paste0("\n\t\t-EXPRESSION B..."))
# Grid
Expression = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "Expression",]
gg9 = ggplot(Expression, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = my_mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#cf4141")) +
facet_grid(Feature~.) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
xlab("") +
ylab("TPM") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 0, 5.5))
rm(list = c("Expression"))
#### REPEAT CONTENT B
cat(paste0("\n\t\t-REPEAT CONTENT B..."))
# Grid
Repeat_content = TAB_LONG_FINAL[TAB_LONG_FINAL$Feature == "Repeat content",]
gg10 = ggplot(Repeat_content, aes(x = Type.1, y = Value, fill = Type.1)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "point", shape = 5, size = 3, color = "black", fill = "black") +
scale_fill_manual(
labels = c("PC genes", "LC-lncRNAs", "MC-lncRNAs", "HC-lncRNAs", "Intergenic regions"),
values = c("#a2ded9", "#ce4fd3", "#eb92ef", "#edd0ee", "#cf4141")
) +
facet_grid(Feature~.) +
xlab("") +
ylab("Repeat content (%)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 23),
strip.text.x = element_blank(),
strip.text.y = element_text(size = 23),
strip.background.y = element_rect(fill = "#c7d4de", color = "black", linewidth = 1)) +
theme(plot.margin = margin(0, 5.5, 5.5, 5.5))
rm(list = c("Repeat_content"))
#### FIGURE FEATURES
# Si tenemos valores de NA para ciertos transcritos, como es el caso de intergenic regions en numero de exones, se generara
# el siguiente error:
# 1: Removed 169902 rows containing non-finite values (`stat_boxplot()`).
# 2: Removed 169902 rows containing non-finite values (`stat_summary()`).
# Tambien puede ocurrir que tengas valores iguales a cero como en el caso de TPM. el valor 0 en escala logaritmica tiende a
# -Inf. Por tanto como la escala del eje y es en escala logaritmica simplemente te da el aviso de que hay valores que transformados
# a logaritmo serian -Inf.
# 5: Transformation introduced infinite values in continuous y-axis.
cat(paste0("\n\t\t-ALL FEATURES A AND B..."))
gg_A = ggarrange(gg1, gg2, gg3, gg4, gg5, ncol = 1, heights = c(0.21, 0.20, 0.20, 0.20, 0.19))
gg_B = ggarrange(gg6, gg7, gg8, gg9, gg10, ncol = 1, heights = c(0.21, 0.20, 0.20, 0.20, 0.19))
gg_final = ggarrange(gg_A, ggparagraph(text="   ", face = "italic", size = 16, color = "black"), gg_B, ncol = 3, widths = c(0.65, 0.08, 0.27))
ggsave(paste0(WD, "/ALL/FINAL-COLLAPSE-NR.png"), height = 25, width = 25, dpi = 600)
ggsave(paste0(WD, "/ALL/FINAL-COLLAPSE-NR.pdf"), height = 25, width = 25, dpi = 600)
rm(list = c("gg_final", "gg_A", "gg_B", "gg1", "gg2", "gg3", "gg4", "gg5", "gg6", "gg7", "gg8", "gg9", "gg10"))
