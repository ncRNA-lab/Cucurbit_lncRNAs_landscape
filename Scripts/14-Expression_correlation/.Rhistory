TAB_x_merg_sum_1 = TAB_x_merg %>% group_by(Specie, Type, Experiment) %>% summarise(PAIRS.Number= sum(Count), PAIRS.Total = n(), PAIRS.Percentage = round((sum(Count) * 100)/ n(), 2))
TAB_x_merg_sum_1$Specie = factor(TAB_x_merg_sum_1$Specie, levels = species_long)
TAB_x_merg_sum_1$Type = factor(TAB_x_merg_sum_1$Type, levels = c("LncRNAs_Genes"))
# Number and percentage of experiments by pair with correlation values.
TAB_u_merg_sum_2 = TAB_u_merg %>% group_by(Specie, Type, ID_transcript.1, ID_transcript.2) %>% summarise(EXP.Number= sum(Count), EXP.Total = n(), EXP.Percentage = round((sum(Count) * 100)/ n(), 2))
TAB_u_merg_sum_2$Specie = factor(TAB_u_merg_sum_2$Specie, levels = species_long)
TAB_u_merg_sum_2$Type = factor(TAB_u_merg_sum_2$Type, levels = c("LncRNAs_Genes", "Genes_Genes"))
TAB_u_merg_sum_2_removed_0 = TAB_u_merg_sum_2[TAB_u_merg_sum_2$EXP.Number > 0,]
TAB_u_merg_sum_2_removed_0_LG = TAB_u_merg_sum_2[TAB_u_merg_sum_2$EXP.Number > 0 & TAB_u_merg_sum_2$Type == c("LncRNAs_Genes"),]
TAB_x_merg_sum_2 = TAB_x_merg %>% group_by(Specie, Type, ID_transcript.1, ID_transcript.2) %>% summarise(EXP.Number= sum(Count), EXP.Total = n(), EXP.Percentage = round((sum(Count) * 100)/ n(), 2))
TAB_x_merg_sum_2$Specie = factor(TAB_x_merg_sum_2$Specie, levels = species_long)
TAB_x_merg_sum_2$Type = factor(TAB_x_merg_sum_2$Type, levels = c("LncRNAs_Genes"))
TAB_x_merg_sum_2_removed_0 = TAB_x_merg_sum_2[TAB_x_merg_sum_2$EXP.Number > 0,]
TAB_x_merg_sum_2_removed_0_LG = TAB_x_merg_sum_2[TAB_x_merg_sum_2$EXP.Number > 0 & TAB_x_merg_sum_2$Type == c("LncRNAs_Genes"),]
# Get total and unique number and percentage of pairs.
TAB_u_total = TAB_u_merg_sum_2 %>% group_by(Specie, Type) %>% summarise(PAIRS.Total = n())
TAB_u_unique = TAB_u_merg_sum_2_removed_0 %>% group_by(Specie, Type) %>% summarise(PAIRS.Unique = n())
TAB_u_sum = merge(TAB_u_total, TAB_u_unique, by = c("Specie", "Type"))
TAB_u_sum$PAIRS.Unique_perc = round((TAB_u_sum$PAIRS.Unique * 100)/TAB_u_sum$PAIRS.Total, 2)
TAB_x_total = TAB_x_merg_sum_2 %>% group_by(Specie, Type) %>% summarise(PAIRS.Total = n())
TAB_x_unique = TAB_x_merg_sum_2_removed_0 %>% group_by(Specie, Type) %>% summarise(PAIRS.Unique = n())
TAB_x_sum = merge(TAB_x_total, TAB_x_unique, by = c("Specie", "Type"))
TAB_x_sum$PAIRS.Unique_perc = round((TAB_x_sum$PAIRS.Unique * 100)/TAB_x_sum$PAIRS.Total, 2)
rm(list = c("TAB_u_total", "TAB_x_total", "TAB_u_unique", "TAB_x_unique"))
View(TAB_u_corr_filt_red_all_collap)
################################################################################
## Global correlation BOXPLOT.
cat(paste0("\t-Figure (BOXPLOT)...\n"))
ggU = ggplot(TAB_u_corr_filt_red_all_collap, aes(x = Type, y = Mean.Cor, fill = Type)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_fill_manual(values = c("#e5dd6c", "#7cc1cf", "#C1BFBE")) +
ylab("correlation coefficient (lincRNAs)") + xlab("") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "top",
legend.title = element_blank())
ggX = ggplot(TAB_x_corr_filt_red_all_collap, aes(x = Type, y = Mean.Cor, fill = Type)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_fill_manual(values = c("#e1ad60", "#C1BFBE")) +
ylab("correlation coefficient (NAT-lncRNAs)") + xlab("") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "top",
legend.title = element_blank())
gg_final = ggarrange(ggU,
ggX,
ncol = 2,
common.legend = F,
legend = "top")
ggsave(paste0(WD_corr, "/ALL/01-direction_and_strength_correlation/Global_correlation-BOXPLOT-MEAN.png"), height = 5, width = 10, dpi = 600)
ggsave(paste0(WD_corr, "/ALL/01-direction_and_strength_correlation/Global_correlation-BOXPLOT-MEAN.pdf"), height = 5, width = 10, dpi = 600)
rm(list = c("ggU", "ggX", "gg_final"))
################################################################################
## Global correlation BOXPLOT.
cat(paste0("\t-Figure (BOXPLOT)...\n"))
ggU = ggplot(TAB_u_corr_filt_red_all_collap, aes(x = Type, y = Median.Cor, fill = Type)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_fill_manual(values = c("#e5dd6c", "#7cc1cf", "#C1BFBE")) +
ylab("correlation coefficient (lincRNAs)") + xlab("") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "top",
legend.title = element_blank())
ggX = ggplot(TAB_x_corr_filt_red_all_collap, aes(x = Type, y = Median.Cor, fill = Type)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_fill_manual(values = c("#e1ad60", "#C1BFBE")) +
ylab("correlation coefficient (NAT-lncRNAs)") + xlab("") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) +
theme(legend.position = "top",
legend.title = element_blank())
gg_final = ggarrange(ggU,
ggX,
ncol = 2,
common.legend = F,
legend = "top")
ggsave(paste0(WD_corr, "/ALL/01-direction_and_strength_correlation/Global_correlation-BOXPLOT-MEDIAN.png"), height = 5, width = 10, dpi = 600)
ggsave(paste0(WD_corr, "/ALL/01-direction_and_strength_correlation/Global_correlation-BOXPLOT-MEDIAN.pdf"), height = 5, width = 10, dpi = 600)
rm(list = c("ggU", "ggX", "gg_final"))
View(TAB_u_corr_filt_red_all_collap)
######### MODULES
suppressMessages(library(ggplot2))
suppressMessages(library(ggpubr))
suppressMessages(library(dplyr))
######### VARIABLES
WD_pred = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/05-predict_lncRNAs"
WD_corr = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/17-Correlation_DEFINITIVE"
WD_DEA = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/16-DEA"
AI = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Additional_info"
species_short = c("cme", "csa", "cla", "cma", "cmo", "cpe", "mch")
species_long = c("C. melo", "C. sativus", "C. lanatus", "C. maxima", "C. moschata", "C. pepo", "M. charantia")
######### PIPELINE
if (!dir.exists(paste0(WD_corr, "/ALL"))){
dir.create(paste0(WD_corr, "/ALL"))
}
if (!dir.exists(paste0(WD_corr, "/ALL/01-direction_and_strength_correlation"))){
dir.create(paste0(WD_corr, "/ALL/01-direction_and_strength_correlation"))
}
if (!dir.exists(paste0(WD_corr, "/ALL/02-Number_and_Percentage_correlation"))){
dir.create(paste0(WD_corr, "/ALL/02-Number_and_Percentage_correlation"))
}
if (!dir.exists(paste0(WD_corr, "/ALL/03-Gene_description_correlation"))){
dir.create(paste0(WD_corr, "/ALL/03-Gene_description_correlation"))
}
## STEP 7 (Closest)
cat(paste0("-Closest...\n"))
################################################################################
## Load the lncRNA database.
cat(paste0("\t-Load the lncRNA database...\n"))
DB_lnc = data.frame()
for (i in 1:length(species_short)) {
spes = species_short[i]
spel = species_long[i]
cat(paste0("\t\t-Specie: ", spes, "...\n"))
# Load lncRNA database.
db_lnc = read.table(paste0(WD_pred, "/", spes, "/STEP-FINAL/Database/Database_LncRNAs.tsv"), sep = "\t", header = T, quote = "\"")
db_lnc = db_lnc[, c("ID_transcript", "Significance_level")]
colnames(db_lnc) = c("ID_transcript", "Confidence")
db_lnc$Specie = spel
db_lnc = db_lnc[, c("Specie", "ID_transcript", "Confidence")]
DB_lnc = rbind(DB_lnc, db_lnc)
rm(list = c("spes", "spel", "db_lnc"))
}
rm(list = c("i"))
################################################################################
## Load interaction tables with all the information about:
##    - Intergenic (TAB_u_int) --> LncRNAs-PCGs.
##    - Antisense (TAB_x_int) --> LncRNAs-PCGs.
cat(paste0("\t-Load interaction tables about intergenic and antisense lncRNAs...\n"))
TAB_u_int = data.frame()
TAB_x_int = data.frame()
for (i in 1:length(species_short)) {
spes = species_short[i]
spel = species_long[i]
cat(paste0("\t\t-Specie: ", spes, "...\n"))
# Load lncRNAs database.
db_lnc = read.table(paste0(WD_pred, "/", spes, "/STEP-FINAL/Database/Database_LncRNAs.tsv"), sep = "\t", header = T, quote = "\"")
db_lnc = db_lnc[, c("ID_transcript", "Significance_level")]
db_lnc_1 = db_lnc
colnames(db_lnc_1) = c("ID_transcript.1", "Confidence.1")
db_lnc_2 = db_lnc
colnames(db_lnc_2) = c("ID_transcript.2", "Confidence.2")
# Load the table closest from intergenic folder.
tab_u = read.table(paste0(WD_corr, "/", spes, "/intergenic/nr/STEP2/TAB_CIS_closest.tsv"), header = T, sep = "\t", quote = "\"")
tab_u = merge(tab_u, db_lnc_1, by = "ID_transcript.1", all.x = T, all.y = F)
tab_u = merge(tab_u, db_lnc_2, by = "ID_transcript.2", all.x = T, all.y = F)
tab_u$Confidence.1 = ifelse(is.na(tab_u$Confidence.1), "PC gene", tab_u$Confidence.1)
tab_u$Confidence.2 = ifelse(is.na(tab_u$Confidence.2), "PC gene", tab_u$Confidence.2)
tab_u = tab_u[, c("Specie", "Chr", "ID_transcript.1", "Start.1", "End.1", "Strand.1", "Confidence.1", "ID_transcript.2", "Start.2",
"End.2", "Strand.2", "Confidence.2", "Distance", "Type")]
TAB_u_int = rbind(TAB_u_int, tab_u)
rm(list = c("tab_u"))
# Load the table closest from antisense folder.
tab_x = read.table(paste0(WD_corr, "/", spes, "/antisense/nr/STEP2/TAB_CIS.tsv"), header = T, sep = "\t", quote = "\"")
tab_x = merge(tab_x, db_lnc_1, by = "ID_transcript.1", all.x = T, all.y = F)
tab_x = merge(tab_x, db_lnc_2, by = "ID_transcript.2", all.x = T, all.y = F)
tab_x$Confidence.1 = ifelse(is.na(tab_x$Confidence.1), "PC gene", tab_x$Confidence.1)
tab_x$Confidence.2 = ifelse(is.na(tab_x$Confidence.2), "PC gene", tab_x$Confidence.2)
tab_x = tab_x[, c("Specie", "Chr", "ID_transcript.1", "Start.1", "End.1", "Strand.1", "Confidence.1", "ID_transcript.2", "Start.2",
"End.2", "Strand.2", "Confidence.2", "Overlap.Perc", "Overlap", "Type")]
TAB_x_int = rbind(TAB_x_int, tab_x)
rm(list = c("tab_x"))
rm(list = c("spes", "spel", "db_lnc", "db_lnc_1", "db_lnc_2"))
}
rm(list = c("i"))
################################################################################
## Load correlation tables with all the information about:
##    - Intergenic (TAB_u_corr) --> LncRNAs-PCGs and PCGs-PCGs.
##    - Antisense (TAB_x_corr) --> LncRNAs-PCGs.
cat(paste0("\t-Load correlation tables...\n"))
TAB_u_corr = data.frame()
TAB_x_corr = data.frame()
for (i in 1:length(species_short)) {
spes = species_short[i]
spel = species_long[i]
cat(paste0("\t\t-Specie: ", spes, "...\n"))
# Load lncRNAs database.
db_lnc = read.table(paste0(WD_pred, "/", spes, "/STEP-FINAL/Database/Database_LncRNAs.tsv"), sep = "\t", header = T, quote = "\"")
db_lnc = db_lnc[, c("ID_transcript", "Significance_level")]
db_lnc_1 = db_lnc
colnames(db_lnc_1) = c("ID_transcript.1", "Confidence.1")
db_lnc_2 = db_lnc
colnames(db_lnc_2) = c("ID_transcript.2", "Confidence.2")
# Load the table closest from intergenic folder.
tab_u = read.table(paste0(WD_corr, "/", spes, "/intergenic/nr/STEP4/TAB_CIS-PEARSON_closest.tsv"), header = T, sep = "\t", quote = "\"")
tab_u = merge(tab_u, db_lnc_1, by = "ID_transcript.1", all.x = T, all.y = F)
tab_u = merge(tab_u, db_lnc_2, by = "ID_transcript.2", all.x = T, all.y = F)
tab_u$Confidence.1 = ifelse(is.na(tab_u$Confidence.1), "PC gene", tab_u$Confidence.1)
tab_u$Confidence.2 = ifelse(is.na(tab_u$Confidence.2), "PC gene", tab_u$Confidence.2)
tab_u = tab_u[, c("Specie", "Chr", "ID_transcript.1", "Start.1", "End.1", "Strand.1", "Confidence.1", "ID_transcript.2", "Start.2",
"End.2", "Strand.2", "Confidence.2", "Distance", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_u_corr = rbind(TAB_u_corr, tab_u)
rm(list = c("tab_u"))
# Load the table closest from antisense folder.
tab_x = read.table(paste0(WD_corr, "/", spes, "/antisense/nr/STEP4/TAB_CIS-PEARSON.tsv"), header = T, sep = "\t", quote = "\"")
tab_x = merge(tab_x, db_lnc_1, by = "ID_transcript.1", all.x = T, all.y = F)
tab_x = merge(tab_x, db_lnc_2, by = "ID_transcript.2", all.x = T, all.y = F)
tab_x$Confidence.1 = ifelse(is.na(tab_x$Confidence.1), "PC gene", tab_x$Confidence.1)
tab_x$Confidence.2 = ifelse(is.na(tab_x$Confidence.2), "PC gene", tab_x$Confidence.2)
tab_x = tab_x[, c("Specie", "Chr", "ID_transcript.1", "Start.1", "End.1", "Strand.1", "Confidence.1", "ID_transcript.2", "Start.2",
"End.2", "Strand.2", "Confidence.2", "Overlap.Perc", "Overlap", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_x_corr = rbind(TAB_x_corr, tab_x)
rm(list = c("tab_x"))
rm(list = c("spes", "spel", "db_lnc", "db_lnc_1", "db_lnc_2"))
}
rm(list = c("i"))
################################################################################
## Load random pairs.
cat(paste0("\t-Load random pairs...\n"))
TAB_u_corr_random = data.frame()
TAB_x_corr_random = data.frame()
for (i in 1:length(species_short)) {
spes = species_short[i]
spel = species_long[i]
cat(paste0("\t\t-Specie: ", spes, "...\n"))
# Load the table from intergenic folder.
tab_u_random = read.table(paste0(WD_corr, "/", spes, "/intergenic/nr/STEP6/TAB_CIS-PEARSON_closest-random.tsv"), header = T, sep = "\t", quote = "\"")
tab_u_random = merge(tab_u_random, DB_lnc, by.x = c("Specie", "ID_transcript.1"), by.y = c("Specie", "ID_transcript"), all.x = T, all.y = F)
names(tab_u_random)[names(tab_u_random) == "Confidence"] = "Confidence.1"
tab_u_random$Confidence.1 = ifelse(is.na(tab_u_random$Confidence.1), "PC gene", tab_u_random$Confidence.1)
tab_u_random = merge(tab_u_random, DB_lnc, by.x = c("Specie", "ID_transcript.2"), by.y = c("Specie", "ID_transcript"), all.x = T, all.y = F)
names(tab_u_random)[names(tab_u_random) == "Confidence"] = "Confidence.2"
tab_u_random$Confidence.2 = ifelse(is.na(tab_u_random$Confidence.2), "PC gene", tab_u_random$Confidence.2)
tab_u_random = tab_u_random[, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_u_corr_random = rbind(TAB_u_corr_random, tab_u_random)
rm(list = c("tab_u_random"))
# Load the table from antisense folder.
tab_x_random = read.table(paste0(WD_corr, "/", spes, "/antisense/nr/STEP6/TAB_CIS-PEARSON-random.tsv"), header = T, sep = "\t", quote = "\"")
tab_x_random = merge(tab_x_random, DB_lnc, by.x = c("Specie", "ID_transcript.1"), by.y = c("Specie", "ID_transcript"), all.x = T, all.y = F)
names(tab_x_random)[names(tab_x_random) == "Confidence"] = "Confidence.1"
tab_x_random$Confidence.1 = ifelse(is.na(tab_x_random$Confidence.1), "PC gene", tab_x_random$Confidence.1)
tab_x_random = merge(tab_x_random, DB_lnc, by.x = c("Specie", "ID_transcript.2"), by.y = c("Specie", "ID_transcript"), all.x = T, all.y = F)
names(tab_x_random)[names(tab_x_random) == "Confidence"] = "Confidence.2"
tab_x_random$Confidence.2 = ifelse(is.na(tab_x_random$Confidence.2), "PC gene", tab_x_random$Confidence.2)
tab_x_random = tab_x_random[, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_x_corr_random = rbind(TAB_x_corr_random, tab_x_random)
rm(list = c("tab_x_random", "spes", "spel"))
}
rm(list = c("i"))
################################################################################
## Filter.
cat(paste0("\t-Filter by confidence...\n"))
TAB_u_int_filt = TAB_u_int[TAB_u_int$Confidence.1 %in% c("High", "PC gene"),]
TAB_u_corr_filt = TAB_u_corr[TAB_u_corr$Confidence.1 %in% c("High", "PC gene"),]
TAB_u_corr_random_filt = TAB_u_corr_random[(TAB_u_corr_random$Confidence.1 %in% c("High", "PC gene")) & (TAB_u_corr_random$Confidence.2 %in% c("High", "PC gene")), ]
TAB_x_int_filt = TAB_x_int[TAB_x_int$Confidence.1 %in% c("High"), ]
TAB_x_corr_filt = TAB_x_corr[TAB_x_corr$Confidence.1 %in% c("High"), ]
TAB_x_corr_random_filt = TAB_x_corr_random[(TAB_x_corr_random$Confidence.1 %in% c("High", "PC gene")) & (TAB_x_corr_random$Confidence.2 %in% c("High", "PC gene")), ]
rm(list = c("TAB_u_int", "TAB_x_int", "TAB_u_corr", "TAB_x_corr", "TAB_u_corr_random", "TAB_x_corr_random"))
################################################################################
## Reduce the number of columns.
cat(paste0("\t-Reduce the number of columns...\n"))
TAB_u_corr_filt_red = TAB_u_corr_filt[, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_u_corr_random_filt_red = TAB_u_corr_random_filt
TAB_u_corr_filt_red_all = rbind(TAB_u_corr_filt_red, TAB_u_corr_random_filt_red)
TAB_u_corr_filt_red_all$Specie = factor(TAB_u_corr_filt_red_all$Specie, levels = species_long)
TAB_u_corr_filt_red_all$Type = factor(TAB_u_corr_filt_red_all$Type, levels = c("LncRNAs_Genes", "Genes_Genes", "Random pairs"))
TAB_u_corr_filt_red_all_collap = TAB_u_corr_filt_red_all %>% group_by(Specie, Type, Experiment) %>% summarise(Mean.Cor = mean(Cor.Deseq.Vst), Median.Cor = median(Cor.Deseq.Vst))
TAB_x_corr_filt_red = TAB_x_corr_filt[, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_x_corr_random_filt_red = TAB_x_corr_random_filt
TAB_x_corr_filt_red_all = rbind(TAB_x_corr_filt_red, TAB_x_corr_random_filt_red)
TAB_x_corr_filt_red_all$Specie = factor(TAB_x_corr_filt_red_all$Specie, levels = species_long)
TAB_x_corr_filt_red_all$Type = factor(TAB_x_corr_filt_red_all$Type, levels = c("LncRNAs_Genes", "Random pairs"))
TAB_x_corr_filt_red_all_collap = TAB_x_corr_filt_red_all %>% group_by(Specie, Type, Experiment) %>% summarise(Mean.Cor = mean(Cor.Deseq.Vst), Median.Cor = median(Cor.Deseq.Vst))
rm(list = c("TAB_u_corr_filt_red", "TAB_x_corr_filt_red", "TAB_u_corr_random_filt_red", "TAB_x_corr_random_filt_red"))
################################################################################
## Creates the count table.
cat(paste0("\t-Creates the count table....\n"))
TAB_u_merg = data.frame()
TAB_x_merg = data.frame()
for (i in 1:length(species_short)) {
spes = species_short[i]
spel = species_long[i]
cat(paste0("\t\t-Specie: ", spes, "...\n"))
experiments = gsub(".tsv", "", list.files(paste0(WD_DEA, "/", spes, "/03-Metadata_DEA")))
for (exp in experiments) {
tab_u_int = TAB_u_int_filt[TAB_u_int_filt$Specie == spel, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type")]
tab_u_corr = TAB_u_corr_filt[TAB_u_corr_filt$Specie == spel & TAB_u_corr_filt$Experiment == exp, c("Specie", "ID_transcript.1", "ID_transcript.2", "Type", "Experiment")]
tab_u_merg = merge(tab_u_int, tab_u_corr, by = c("Specie", "ID_transcript.1", "ID_transcript.2", "Type"), all = T)
tab_u_merg$Count = ifelse(is.na(tab_u_merg$Experiment), 0, 1)
tab_u_merg$Experiment = exp
tab_u_merg = tab_u_merg[, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type", "Experiment", "Count")]
TAB_u_merg = rbind(TAB_u_merg, tab_u_merg)
rm(list = c("tab_u_merg", "tab_u_int", "tab_u_corr"))
tab_x_int = TAB_x_int_filt[TAB_x_int_filt$Specie == spel, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type")]
tab_x_corr = TAB_x_corr_filt[TAB_x_corr_filt$Specie == spel & TAB_x_corr_filt$Experiment == exp, c("Specie", "ID_transcript.1", "ID_transcript.2", "Type", "Experiment")]
tab_x_merg = merge(tab_x_int, tab_x_corr, by = c("Specie", "ID_transcript.1", "ID_transcript.2", "Type"), all = T)
tab_x_merg$Count = ifelse(is.na(tab_x_merg$Experiment), 0, 1)
tab_x_merg$Experiment = exp
tab_x_merg = tab_x_merg[, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type", "Experiment", "Count")]
TAB_x_merg = rbind(TAB_x_merg, tab_x_merg)
rm(list = c("tab_x_merg", "tab_x_int", "tab_x_corr"))
}
rm(list = c("spes", "spel", "experiments", "exp"))
}
rm(list = c("i"))
################################################################################
## Create the summary tables.
cat(paste0("\t-Create the summary tables...\n"))
# Number and percentage of pairs by experiment with correlation values.
TAB_u_merg_sum_1 = TAB_u_merg %>% group_by(Specie, Type, Experiment) %>% summarise(PAIRS.Number= sum(Count), PAIRS.Total = n(), PAIRS.Percentage = round((sum(Count) * 100)/ n(), 2))
TAB_u_merg_sum_1$Specie = factor(TAB_u_merg_sum_1$Specie, levels = species_long)
TAB_u_merg_sum_1$Type = factor(TAB_u_merg_sum_1$Type, levels = c("LncRNAs_Genes", "Genes_Genes"))
TAB_x_merg_sum_1 = TAB_x_merg %>% group_by(Specie, Type, Experiment) %>% summarise(PAIRS.Number= sum(Count), PAIRS.Total = n(), PAIRS.Percentage = round((sum(Count) * 100)/ n(), 2))
TAB_x_merg_sum_1$Specie = factor(TAB_x_merg_sum_1$Specie, levels = species_long)
TAB_x_merg_sum_1$Type = factor(TAB_x_merg_sum_1$Type, levels = c("LncRNAs_Genes"))
# Number and percentage of experiments by pair with correlation values.
TAB_u_merg_sum_2 = TAB_u_merg %>% group_by(Specie, Type, ID_transcript.1, ID_transcript.2) %>% summarise(EXP.Number= sum(Count), EXP.Total = n(), EXP.Percentage = round((sum(Count) * 100)/ n(), 2))
TAB_u_merg_sum_2$Specie = factor(TAB_u_merg_sum_2$Specie, levels = species_long)
TAB_u_merg_sum_2$Type = factor(TAB_u_merg_sum_2$Type, levels = c("LncRNAs_Genes", "Genes_Genes"))
TAB_u_merg_sum_2_removed_0 = TAB_u_merg_sum_2[TAB_u_merg_sum_2$EXP.Number > 0,]
TAB_u_merg_sum_2_removed_0_LG = TAB_u_merg_sum_2[TAB_u_merg_sum_2$EXP.Number > 0 & TAB_u_merg_sum_2$Type == c("LncRNAs_Genes"),]
TAB_x_merg_sum_2 = TAB_x_merg %>% group_by(Specie, Type, ID_transcript.1, ID_transcript.2) %>% summarise(EXP.Number= sum(Count), EXP.Total = n(), EXP.Percentage = round((sum(Count) * 100)/ n(), 2))
TAB_x_merg_sum_2$Specie = factor(TAB_x_merg_sum_2$Specie, levels = species_long)
TAB_x_merg_sum_2$Type = factor(TAB_x_merg_sum_2$Type, levels = c("LncRNAs_Genes"))
TAB_x_merg_sum_2_removed_0 = TAB_x_merg_sum_2[TAB_x_merg_sum_2$EXP.Number > 0,]
TAB_x_merg_sum_2_removed_0_LG = TAB_x_merg_sum_2[TAB_x_merg_sum_2$EXP.Number > 0 & TAB_x_merg_sum_2$Type == c("LncRNAs_Genes"),]
# Get total and unique number and percentage of pairs.
TAB_u_total = TAB_u_merg_sum_2 %>% group_by(Specie, Type) %>% summarise(PAIRS.Total = n())
TAB_u_unique = TAB_u_merg_sum_2_removed_0 %>% group_by(Specie, Type) %>% summarise(PAIRS.Unique = n())
TAB_u_sum = merge(TAB_u_total, TAB_u_unique, by = c("Specie", "Type"))
TAB_u_sum$PAIRS.Unique_perc = round((TAB_u_sum$PAIRS.Unique * 100)/TAB_u_sum$PAIRS.Total, 2)
TAB_x_total = TAB_x_merg_sum_2 %>% group_by(Specie, Type) %>% summarise(PAIRS.Total = n())
TAB_x_unique = TAB_x_merg_sum_2_removed_0 %>% group_by(Specie, Type) %>% summarise(PAIRS.Unique = n())
TAB_x_sum = merge(TAB_x_total, TAB_x_unique, by = c("Specie", "Type"))
TAB_x_sum$PAIRS.Unique_perc = round((TAB_x_sum$PAIRS.Unique * 100)/TAB_x_sum$PAIRS.Total, 2)
rm(list = c("TAB_u_total", "TAB_x_total", "TAB_u_unique", "TAB_x_unique"))
View(TAB_u_merg_sum_1)
######### MODULES
suppressMessages(library(ggplot2))
suppressMessages(library(ggpubr))
suppressMessages(library(dplyr))
######### VARIABLES
WD_pred = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/05-predict_lncRNAs"
WD_corr = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/17-Correlation_DEFINITIVE"
WD_DEA = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/16-DEA"
AI = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Additional_info"
species_short = c("cme", "csa", "cla", "cma", "cmo", "cpe", "mch")
species_long = c("C. melo", "C. sativus", "C. lanatus", "C. maxima", "C. moschata", "C. pepo", "M. charantia")
######### PIPELINE
if (!dir.exists(paste0(WD_corr, "/ALL"))){
dir.create(paste0(WD_corr, "/ALL"))
}
if (!dir.exists(paste0(WD_corr, "/ALL/01-direction_and_strength_correlation"))){
dir.create(paste0(WD_corr, "/ALL/01-direction_and_strength_correlation"))
}
if (!dir.exists(paste0(WD_corr, "/ALL/02-Number_and_Percentage_correlation"))){
dir.create(paste0(WD_corr, "/ALL/02-Number_and_Percentage_correlation"))
}
if (!dir.exists(paste0(WD_corr, "/ALL/03-Gene_description_correlation"))){
dir.create(paste0(WD_corr, "/ALL/03-Gene_description_correlation"))
}
## STEP 7 (Closest)
cat(paste0("-Closest...\n"))
################################################################################
## Load the lncRNA database.
cat(paste0("\t-Load the lncRNA database...\n"))
DB_lnc = data.frame()
for (i in 1:length(species_short)) {
spes = species_short[i]
spel = species_long[i]
cat(paste0("\t\t-Specie: ", spes, "...\n"))
# Load lncRNA database.
db_lnc = read.table(paste0(WD_pred, "/", spes, "/STEP-FINAL/Database/Database_LncRNAs.tsv"), sep = "\t", header = T, quote = "\"")
db_lnc = db_lnc[, c("ID_transcript", "Significance_level")]
colnames(db_lnc) = c("ID_transcript", "Confidence")
db_lnc$Specie = spel
db_lnc = db_lnc[, c("Specie", "ID_transcript", "Confidence")]
DB_lnc = rbind(DB_lnc, db_lnc)
rm(list = c("spes", "spel", "db_lnc"))
}
rm(list = c("i"))
################################################################################
## Load interaction tables with all the information about:
##    - Intergenic (TAB_u_int) --> LncRNAs-PCGs.
##    - Antisense (TAB_x_int) --> LncRNAs-PCGs.
cat(paste0("\t-Load interaction tables about intergenic and antisense lncRNAs...\n"))
TAB_u_int = data.frame()
TAB_x_int = data.frame()
for (i in 1:length(species_short)) {
spes = species_short[i]
spel = species_long[i]
cat(paste0("\t\t-Specie: ", spes, "...\n"))
# Load lncRNAs database.
db_lnc = read.table(paste0(WD_pred, "/", spes, "/STEP-FINAL/Database/Database_LncRNAs.tsv"), sep = "\t", header = T, quote = "\"")
db_lnc = db_lnc[, c("ID_transcript", "Significance_level")]
db_lnc_1 = db_lnc
colnames(db_lnc_1) = c("ID_transcript.1", "Confidence.1")
db_lnc_2 = db_lnc
colnames(db_lnc_2) = c("ID_transcript.2", "Confidence.2")
# Load the table closest from intergenic folder.
tab_u = read.table(paste0(WD_corr, "/", spes, "/intergenic/nr/STEP2/TAB_CIS_closest.tsv"), header = T, sep = "\t", quote = "\"")
tab_u = merge(tab_u, db_lnc_1, by = "ID_transcript.1", all.x = T, all.y = F)
tab_u = merge(tab_u, db_lnc_2, by = "ID_transcript.2", all.x = T, all.y = F)
tab_u$Confidence.1 = ifelse(is.na(tab_u$Confidence.1), "PC gene", tab_u$Confidence.1)
tab_u$Confidence.2 = ifelse(is.na(tab_u$Confidence.2), "PC gene", tab_u$Confidence.2)
tab_u = tab_u[, c("Specie", "Chr", "ID_transcript.1", "Start.1", "End.1", "Strand.1", "Confidence.1", "ID_transcript.2", "Start.2",
"End.2", "Strand.2", "Confidence.2", "Distance", "Type")]
TAB_u_int = rbind(TAB_u_int, tab_u)
rm(list = c("tab_u"))
# Load the table closest from antisense folder.
tab_x = read.table(paste0(WD_corr, "/", spes, "/antisense/nr/STEP2/TAB_CIS.tsv"), header = T, sep = "\t", quote = "\"")
tab_x = merge(tab_x, db_lnc_1, by = "ID_transcript.1", all.x = T, all.y = F)
tab_x = merge(tab_x, db_lnc_2, by = "ID_transcript.2", all.x = T, all.y = F)
tab_x$Confidence.1 = ifelse(is.na(tab_x$Confidence.1), "PC gene", tab_x$Confidence.1)
tab_x$Confidence.2 = ifelse(is.na(tab_x$Confidence.2), "PC gene", tab_x$Confidence.2)
tab_x = tab_x[, c("Specie", "Chr", "ID_transcript.1", "Start.1", "End.1", "Strand.1", "Confidence.1", "ID_transcript.2", "Start.2",
"End.2", "Strand.2", "Confidence.2", "Overlap.Perc", "Overlap", "Type")]
TAB_x_int = rbind(TAB_x_int, tab_x)
rm(list = c("tab_x"))
rm(list = c("spes", "spel", "db_lnc", "db_lnc_1", "db_lnc_2"))
}
rm(list = c("i"))
################################################################################
## Load correlation tables with all the information about:
##    - Intergenic (TAB_u_corr) --> LncRNAs-PCGs and PCGs-PCGs.
##    - Antisense (TAB_x_corr) --> LncRNAs-PCGs.
cat(paste0("\t-Load correlation tables...\n"))
TAB_u_corr = data.frame()
TAB_x_corr = data.frame()
for (i in 1:length(species_short)) {
spes = species_short[i]
spel = species_long[i]
cat(paste0("\t\t-Specie: ", spes, "...\n"))
# Load lncRNAs database.
db_lnc = read.table(paste0(WD_pred, "/", spes, "/STEP-FINAL/Database/Database_LncRNAs.tsv"), sep = "\t", header = T, quote = "\"")
db_lnc = db_lnc[, c("ID_transcript", "Significance_level")]
db_lnc_1 = db_lnc
colnames(db_lnc_1) = c("ID_transcript.1", "Confidence.1")
db_lnc_2 = db_lnc
colnames(db_lnc_2) = c("ID_transcript.2", "Confidence.2")
# Load the table closest from intergenic folder.
tab_u = read.table(paste0(WD_corr, "/", spes, "/intergenic/nr/STEP4/TAB_CIS-PEARSON_closest.tsv"), header = T, sep = "\t", quote = "\"")
tab_u = merge(tab_u, db_lnc_1, by = "ID_transcript.1", all.x = T, all.y = F)
tab_u = merge(tab_u, db_lnc_2, by = "ID_transcript.2", all.x = T, all.y = F)
tab_u$Confidence.1 = ifelse(is.na(tab_u$Confidence.1), "PC gene", tab_u$Confidence.1)
tab_u$Confidence.2 = ifelse(is.na(tab_u$Confidence.2), "PC gene", tab_u$Confidence.2)
tab_u = tab_u[, c("Specie", "Chr", "ID_transcript.1", "Start.1", "End.1", "Strand.1", "Confidence.1", "ID_transcript.2", "Start.2",
"End.2", "Strand.2", "Confidence.2", "Distance", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_u_corr = rbind(TAB_u_corr, tab_u)
rm(list = c("tab_u"))
# Load the table closest from antisense folder.
tab_x = read.table(paste0(WD_corr, "/", spes, "/antisense/nr/STEP4/TAB_CIS-PEARSON.tsv"), header = T, sep = "\t", quote = "\"")
tab_x = merge(tab_x, db_lnc_1, by = "ID_transcript.1", all.x = T, all.y = F)
tab_x = merge(tab_x, db_lnc_2, by = "ID_transcript.2", all.x = T, all.y = F)
tab_x$Confidence.1 = ifelse(is.na(tab_x$Confidence.1), "PC gene", tab_x$Confidence.1)
tab_x$Confidence.2 = ifelse(is.na(tab_x$Confidence.2), "PC gene", tab_x$Confidence.2)
tab_x = tab_x[, c("Specie", "Chr", "ID_transcript.1", "Start.1", "End.1", "Strand.1", "Confidence.1", "ID_transcript.2", "Start.2",
"End.2", "Strand.2", "Confidence.2", "Overlap.Perc", "Overlap", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_x_corr = rbind(TAB_x_corr, tab_x)
rm(list = c("tab_x"))
rm(list = c("spes", "spel", "db_lnc", "db_lnc_1", "db_lnc_2"))
}
rm(list = c("i"))
################################################################################
## Load random pairs.
cat(paste0("\t-Load random pairs...\n"))
TAB_u_corr_random = data.frame()
TAB_x_corr_random = data.frame()
for (i in 1:length(species_short)) {
spes = species_short[i]
spel = species_long[i]
cat(paste0("\t\t-Specie: ", spes, "...\n"))
# Load the table from intergenic folder.
tab_u_random = read.table(paste0(WD_corr, "/", spes, "/intergenic/nr/STEP6/TAB_CIS-PEARSON_closest-random.tsv"), header = T, sep = "\t", quote = "\"")
tab_u_random = merge(tab_u_random, DB_lnc, by.x = c("Specie", "ID_transcript.1"), by.y = c("Specie", "ID_transcript"), all.x = T, all.y = F)
names(tab_u_random)[names(tab_u_random) == "Confidence"] = "Confidence.1"
tab_u_random$Confidence.1 = ifelse(is.na(tab_u_random$Confidence.1), "PC gene", tab_u_random$Confidence.1)
tab_u_random = merge(tab_u_random, DB_lnc, by.x = c("Specie", "ID_transcript.2"), by.y = c("Specie", "ID_transcript"), all.x = T, all.y = F)
names(tab_u_random)[names(tab_u_random) == "Confidence"] = "Confidence.2"
tab_u_random$Confidence.2 = ifelse(is.na(tab_u_random$Confidence.2), "PC gene", tab_u_random$Confidence.2)
tab_u_random = tab_u_random[, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_u_corr_random = rbind(TAB_u_corr_random, tab_u_random)
rm(list = c("tab_u_random"))
# Load the table from antisense folder.
tab_x_random = read.table(paste0(WD_corr, "/", spes, "/antisense/nr/STEP6/TAB_CIS-PEARSON-random.tsv"), header = T, sep = "\t", quote = "\"")
tab_x_random = merge(tab_x_random, DB_lnc, by.x = c("Specie", "ID_transcript.1"), by.y = c("Specie", "ID_transcript"), all.x = T, all.y = F)
names(tab_x_random)[names(tab_x_random) == "Confidence"] = "Confidence.1"
tab_x_random$Confidence.1 = ifelse(is.na(tab_x_random$Confidence.1), "PC gene", tab_x_random$Confidence.1)
tab_x_random = merge(tab_x_random, DB_lnc, by.x = c("Specie", "ID_transcript.2"), by.y = c("Specie", "ID_transcript"), all.x = T, all.y = F)
names(tab_x_random)[names(tab_x_random) == "Confidence"] = "Confidence.2"
tab_x_random$Confidence.2 = ifelse(is.na(tab_x_random$Confidence.2), "PC gene", tab_x_random$Confidence.2)
tab_x_random = tab_x_random[, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_x_corr_random = rbind(TAB_x_corr_random, tab_x_random)
rm(list = c("tab_x_random", "spes", "spel"))
}
rm(list = c("i"))
################################################################################
## Filter.
cat(paste0("\t-Filter by confidence...\n"))
TAB_u_int_filt = TAB_u_int[TAB_u_int$Confidence.1 %in% c("High", "PC gene"),]
TAB_u_corr_filt = TAB_u_corr[TAB_u_corr$Confidence.1 %in% c("High", "PC gene"),]
TAB_u_corr_random_filt = TAB_u_corr_random[(TAB_u_corr_random$Confidence.1 %in% c("High", "PC gene")) & (TAB_u_corr_random$Confidence.2 %in% c("High", "PC gene")), ]
TAB_x_int_filt = TAB_x_int[TAB_x_int$Confidence.1 %in% c("High"), ]
TAB_x_corr_filt = TAB_x_corr[TAB_x_corr$Confidence.1 %in% c("High"), ]
TAB_x_corr_random_filt = TAB_x_corr_random[(TAB_x_corr_random$Confidence.1 %in% c("High", "PC gene")) & (TAB_x_corr_random$Confidence.2 %in% c("High", "PC gene")), ]
rm(list = c("TAB_u_int", "TAB_x_int", "TAB_u_corr", "TAB_x_corr", "TAB_u_corr_random", "TAB_x_corr_random"))
################################################################################
## Reduce the number of columns.
cat(paste0("\t-Reduce the number of columns...\n"))
TAB_u_corr_filt_red = TAB_u_corr_filt[, c("Specie", "ID_transcript.1", "Confidence.1", "ID_transcript.2", "Confidence.2", "Type", "Experiment", "Cor.Deseq.Vst")]
TAB_u_corr_random_filt_red = TAB_u_corr_random_filt
TAB_u_corr_filt_red_all = rbind(TAB_u_corr_filt_red, TAB_u_corr_random_filt_red)
TAB_u_corr_filt_red_all$Specie = factor(TAB_u_corr_filt_red_all$Specie, levels = species_long)
TAB_u_corr_filt_red_all$Type = factor(TAB_u_corr_filt_red_all$Type, levels = c("LncRNAs_Genes", "Genes_Genes", "Random pairs"))
TAB_u_corr_filt_red_all_collap = TAB_u_corr_filt_red_all %>% group_by(Specie, Type, Experiment) %>% summarise(Mean.Cor = mean(Cor.Deseq.Vst), Median.Cor = median(Cor.Deseq.Vst))
View(TAB_u_corr_filt_red_all_collap)
View(TAB_u_corr_filt_red_all_collap)
