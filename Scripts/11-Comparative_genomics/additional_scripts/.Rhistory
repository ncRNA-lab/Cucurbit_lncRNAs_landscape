spe1 = "cme"
spe2 = "cpe"
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sinteny/02-Adhore/PAIRWISE_SPECIES/Individual/cme-cpe"
suppressMessages(library(rtracklayer))
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
View(z1)
dt1 = z1[z1$type=="mRNA", c("seqnames", "Name", "strand")]
View(dt1)
rownames(dt1) = NULL
suppressMessages(library(rtracklayer))
spe1 = "cme"
spe2 = "cpe"
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sinteny/02-Adhore/PAIRWISE_SPECIES/Individual/cme-cpe"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
View(z1)
dt1 = z1[z1$type=="mRNA", c("seqnames", "Name", "strand")]
rownames(dt1) = NULL
View(dt1)
dt1$Name = gsub(".2.", "", dt1$Name)
dt1 = z1[z1$type=="mRNA", c("seqnames", "Name", "strand")]
rownames(dt1) = NULL
dt1$Name = gsub("\.2\.", "", dt1$Name)
dt1$Name = gsub(".2.", "", dt1$Name, fixed = T)
dt1 = z1[z1$type=="mRNA", c("seqnames", "Name", "strand")]
rownames(dt1) = NULL
dt1$Name = gsub(".2.", "", dt1$Name, fixed = T)
suppressMessages(library(rtracklayer))
spe1 = "cme"
spe2 = "cpe"
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sinteny/02-Adhore/PAIRWISE_SPECIES/Individual/cme-cpe"
### 3.1 SPECIE 1
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
dt1 = z1[z1$type=="mRNA", c("seqnames", "Name", "strand")]
rownames(dt1) = NULL
View(dt1)
dt1$Name = gsub(".2.", ".", dt1$Name, fixed = T)
suppressMessages(library(rtracklayer))
spe1 = "cme"
spe2 = "cpe"
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sinteny/02-Adhore/PAIRWISE_SPECIES/Individual/cme-cpe"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sinteny/02-Adhore/PAIRWISE_SPECIES/cme-cpe"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
View(z1)
suppressMessages(library(rtracklayer))
spe1 = "cme"
spe2 = "cpe"
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sinteny/02-Adhore/PAIRWISE_SPECIES/cme-cpe"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
View(z1)
z2 = import(paste0(path, "/", spe2, ".gff3"))
z2 = as.data.frame(z2)
View(z2)
spe2 = "cma"
z2 = import(paste0(path, "/", spe2, ".gff3"))
z2 = as.data.frame(z2)
spe1 = "cme"
spe2 = "cma"
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sinteny/02-Adhore/PAIRWISE_SPECIES/cme-cma"
z2 = import(paste0(path, "/", spe2, ".gff3"))
z2 = as.data.frame(z2)
spe1 = "cma"
spe2 = "cme"
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sinteny/02-Adhore/PAIRWISE_SPECIES/cma-cme"
z2 = import(paste0(path, "/", spe2, ".gff3"))
z2 = as.data.frame(z2)
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Additional_info/GFF3_genes"
spe1 = "car"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
spe1 = "cla"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
spe1 = "cma"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
spe1 = "cme"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
spe1 = "cmo"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
spe1 = "cpe"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
spe1 = "csa"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
spe1 = "lsi"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
spe1 = "mch"
z1 = import(paste0(path, "/", spe1, ".gff3"))
z1 = as.data.frame(z1)
suppressMessages(library(rtracklayer))
## 1. VARIABLES
spe = "cme"
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Additional_info/GFF3_genes"
### 3.1 SPECIE 1
z1 = import(paste0(path, "/", spe, ".gff3"))
z1 = as.data.frame(z1)
dt1 = z1[z1$type=="mRNA", c("ID", "Name")]
View(dt1)
suppressMessages(library(Biostrings))
View(z1)
View(dt1)
spe = "cme"
path_g = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Additional_info/GFF3_genes"
path_p = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Additional_info/GFF3_genes"
## 3. CREATE LISTS BY CHROMOSOME
### 3.1 SPECIE 1
z = import(paste0(path_g, "/", spe, ".gff3"))
z = as.data.frame(z)
dt = z[z$type=="mRNA", c("ID", "Name")]
rownames(dt) = NULL
dt$Name = gsub(".2.", ".", dt$Name, fixed = T)
s = readDNAStringSet(paste0(path_p, "/cme.fa"))
path_p = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Additional_info/Proteomes"
s = readDNAStringSet(paste0(path_p, "/cme.fa"))
s = readDNAStringSet(paste0(path_p, "/cme.fa"), seqtype = "AA")
s = readDNAStringSet(paste0(path_p, "/cme.fa"), seqtype = "B")
s = readAAStringSet(paste0(path_p, "/cme.fa"))
View(s)
seq_name = names(s)
sequence = paste(s)
df <- data.frame(seq_name, sequence)
View(df)
DT = merge(df, dt, by.x = "seq_name", by.y = "Name", all = T)
View(DT)
DT$seq_name = NULL
DT = DT[,c("ID", "sequence")]
DT = merge(df, dt, by.x = "seq_name", by.y = "Name", all = T)
DT$"ID_mod" = paste0(">", DT$ID)
DT$seq_name = NULL
DT$ID = NULL
DT = DT[,c("ID_mod", "sequence")]
write.table(DT, paste0(path_p, "/", spe, "_mod.fa"), col.names = F, row.names = F, sep = "\n", quote = F)
View(df)
DT = merge(df, dt, by.x = "seq_name", by.y = "Name", all = T)
DT = merge(df, dt, by.x = "seq_name", by.y = "Name", all = T)
DT[DT$sequence == "RKLSTKCLAILGKLIYDFVPNLVNEQIGGLSENVERKVFSLASQSL",]
################################################################################
#
# Change headers proteome file in cme. Convert Name to ID.
#
################################################################################
rm(list = ls())
## 0. INSTALL AND LOAD LIBRARIES
suppressMessages(library(rtracklayer))
suppressMessages(library(Biostrings))
## 1. VARIABLES
spe = "cme"
path_g = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Additional_info/GFF3_genes"
path_p = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Additional_info/Proteomes"
## 2. PIPELINE
### 2.1 Load annotation gff3 file.
z = import(paste0(path_g, "/", spe, ".gff3"))
z = as.data.frame(z)
dt = z[z$type=="mRNA", c("ID", "Name")]
rownames(dt) = NULL
dt$Name = gsub(".2.", ".", dt$Name, fixed = T)
### 2.2 Load the proteome fasta file.
s = readAAStringSet(paste0(path_p, "/security/", spe, ".fa"))
seq_name = names(s)
sequence = paste(s)
df = data.frame(seq_name, sequence)
### 2.3 Merge the info and change the header.
DT = merge(df, dt, by.x = "seq_name", by.y = "Name", all = T)
DT$"ID_mod" = paste0(">", DT$ID)
DT$seq_name = NULL
DT$ID = NULL
DT = DT[,c("ID_mod", "sequence")]
write.table(DT, paste0(path_p, "/", spe, ".fa"), col.names = F, row.names = F, sep = "\n", quote = F)
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/05-predict_lncRNAs/lsi/STEP1/Potential_lncRNAs"
suppressMessages(library(rtracklayer))
### 3.1 SPECIE 1
z1 = import(paste0(path, "/POTENTIAL_LNCRNAS_pred.gtf"))
paste0(path, "/POTENTIAL_LNCRNAS_pred.gtf"
paste0(path, "/POTENTIAL_LNCRNAS_pred.gtf")
paste0(path, "/POTENTIAL_LNCRNAS_pred.gtf")
### 3.1 SPECIE 1
z1 = import(paste0(path, "/POTENTIAL_LNCRNAS.gtf"))
z1 = as.data.frame(z1)
View(z1)
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/05-predict_lncRNAs/lsi/STEP1/Potential_lncRNAs"
suppressMessages(library(rtracklayer))
### 3.1 SPECIE 1
z1 = import(paste0(path, "/POTENTIAL_LNCRNAS.gtf"))
z1 = as.data.frame(z1)
View(z1)
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/05-predict_lncRNAs/cme/STEP1/Potential_lncRNAs"
### 3.1 SPECIE 1
z1 = import(paste0(path, "/POTENTIAL_LNCRNAS.gtf"))
View(z1)
path = "/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/05-predict_lncRNAs/cme/STEP1/Original_genes"
### 3.1 SPECIE 1
z1 = import(paste0(path, "/ORIGINAL_GENES.gtf"))
z1 = as.data.frame(z1)
View(z1)
View(z1)
transcript_id = z1[z1$type == "transcript", c("transcript_id")]
transcript_id
write.table(transcript_id, "/home/pvbermell/Documentos/Prueba.txt", sep = "\n", row.names = F, col.names = F, quote = F)
spe1 = "0"
spe1 = "1"
tab_in="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Definitive/03-Blastn/High/ALL/Blast0_1_temp1.txt"
tab_out="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Definitive/03-Blastn/High/ALL/Blast0_1_temp2.txt"
tabin = ead.table(tab_in, header = F, sep = "\t", quote = "\"")
tabin = read.table(tab_in, header = F, sep = "\t", quote = "\"")
View(tabin)
colnames(tabin) = c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart",
"qend", "sstart", "send", "evalue", "bitscore")
suppressMessages(library(dplyr))
tabin_filt_1 = tabin %>% group_by(qseqid, sseqid) %>% slice(which.min(evalue))
View(tabin_filt_1)
tabin = rbind(tabin, tabin)
tabin_filt_1 = tabin %>% group_by(qseqid, sseqid) %>% slice(which.min(evalue))
spe1 = "0"
spe1 = "1"
tab_in="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Definitive/03-Blastn/High/ALL/Prueba.txt"
tab_out="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Definitive/03-Blastn/High/ALL/Prueba_temp2.txt"
tabin = read.table(tab_in, header = F, sep = "\t", quote = "\"")
colnames(tabin) = c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart",
"qend", "sstart", "send", "evalue", "bitscore")
tabin %>%
group_by(qseqid, sseqid)
tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident))
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident)) %>%
distinct(qseqid, sseqid, .keep_all = TRUE)
View(tabin_filt_1)
# suppressMessages(library(ComplexHeatmap))
suppressMessages(library(dplyr))
spe1 = "0"
spe1 = "1"
# tab_in="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Definitive/03-Blastn/High/ALL/Prueba.txt"
# tab_out="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Definitive/03-Blastn/High/ALL/Prueba_temp2.txt"
tab_in="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Scripts/Pascual/PRUEBA/BLASTN/03-Blastn/High/ALL/car_to_cla_default.tsv"
tab_out="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Scripts/Pascual/PRUEBA/BLASTN/03-Blastn/High/ALL/car_to_cla_default_temp.tsv"
tabin = read.table(tab_in, header = F, sep = "\t", quote = "\"")
colnames(tabin) = c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart",
"qend", "sstart", "send", "evalue", "bitscore")
View(tabin)
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length))
tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length))
0 < 6.64e-8
tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, asc(evalue), desc(pident), desc(length))
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length))
View(tabin_filt_1)
tabin_filt_1 = tabin %>%
arrange(evalue)
tabin_filt_1 = tabin %>%
arrange(qseqid, sseqid, evalue)
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length))
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length))
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length)) %>%
top_n(n = -1)
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length)) %>%
top_n(n = 1)
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length)) %>%
slice(1)
tabin_filt_2 = tabin_filt_1 %>%
group_by(qseqid) %>%
arrange(qseqid, evalue, desc(pident), sseqid)
View(tabin_filt_2)
tabin_filt_2 = tabin_filt_1 %>%
group_by(qseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length))
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(evalue, desc(pident), desc(length))
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length)) %>%
slice(1)
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length)) %>%
slice(n = 1)
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length)) %>%
slice(1)
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(evalue, desc(pident), desc(length))
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length)) %>%
slice(1)
tabin_filt_2 = tabin_filt_1 %>%
group_by(qseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length))
ifelse(any(duplicated(tabin_filt_1$evalue) | duplicated(tabin_filt_1$pident)), which(tabin_filt_1$qseqid == tabin_filt_1$sseqid)[1], 1)
any(duplicated(tabin_filt_1$evalue) | duplicated(tabin_filt_1$pident))
duplicated(tabin_filt_1$evalue)
prueba = tabin_filt_1[tabin_filt_1$qseqid == "MSTRG.10005.6",]
View(prueba)
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length))
tabin_filt_2 = tabin_filt_1 %>%
group_by(qseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length))
n = 1
spe1 = "car"
spe2 = "car"
# tab_in="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Definitive/03-Blastn/High/ALL/Prueba.txt"
# tab_out="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Definitive/03-Blastn/High/ALL/Prueba_temp2.txt"
tab_in="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Scripts/Pascual/PRUEBA/BLASTN/03-Blastn/High/ALL/car_to_car_default.tsv"
tab_out="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Scripts/Pascual/PRUEBA/BLASTN/03-Blastn/High/ALL/car_to_car_default_temp.tsv"
n = 1
tabin = read.table(tab_in, header = F, sep = "\t", quote = "\"")
n = "6"
n = int(n)
n = integer(n)
n
n = "6"
n = integer(n)
n
n = "6"
n = as.integer(n)
n
?file.copy()
tab_in="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Scripts/Pascual/PRUEBA/BLASTN/03-Blastn/Low/intronic/cmo_to_cpe_default.tsv"
tab_out="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Scripts/Pascual/PRUEBA/BLASTN/03-Blastn/Low/intronic/cmo_to_cpe_default_copy.tsv"
file.copy(from = tab_in, to = tab_out)
file.copy(from = tab_in, to = tab_out, showWarnings = FALSE)
log = file.copy(from = tab_in, to = tab_out)
spe1 = "0"
spe2 = "1"
tab_in="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Prueba_max_5//03-Blastn/High/ALL/Blast0_1_temp1.txt"
tab_out="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Prueba_max_5//03-Blastn/High/ALL/Blast0_1_temp2.txt"
n = 1
suppressMessages(library(dplyr))
tabin = tryCatch({read.table(tab_in, header = F, sep = "\t", quote = "\"")}, error = function(e) {NULL})
View(tabin)
colnames(tabin) = c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart",
"qend", "sstart", "send", "evalue", "bitscore")
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length)) %>%
slice(1)
View(tabin_filt_1)
if (spe1 == spe2) {
# In this study, we only want to study conservation between species and not within species.
# Therefore, the logical thing to do is to run Blast with all possible paired combinations
# without necessarily combining a species against itself. However, programs such as Orthofinder
# and OrthoMCL require a blast of each species against itself. To avoid the introduction of
# paralogs, we will limit the acceptance of only hits that are of a transcript against itself.
tabin_filt_2 = tabin_filt_1[tabin_filt_1$qseqid == tabin_filt_1$sseqid,]
}
n = 5
if (spe1 != spe2) {
tabin_filt_2 = tabin_filt_1 %>%
group_by(qseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length)) %>%
slice(n)
}
View(tabin_filt_2)
tabin_filt_2 = tabin_filt_1 %>%
group_by(qseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length))
View(tabin_filt_2)
require(mtcars)
if (spe1 != spe2) {
tabin_filt_2 = tabin_filt_1 %>%
group_by(qseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length)) %>%
slice_head(n)
}
if (spe1 != spe2) {
tabin_filt_2 = tabin_filt_1 %>%
group_by(qseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length)) %>%
slice_head(n = n)
}
View(tabin_filt_2)
spe1 = "0"
spe2 = "1"
tab_in="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Prueba_max_5//03-Blastn/High/ALL/Blast0_1_temp1.txt"
tab_out="/mnt/doctorado/3-lncRNAs/Cucurbitaceae/Results/08-comparative_genomics/Sequence_level/OrthoFinder/nr/Prueba_max_5//03-Blastn/High/ALL/Blast0_1_temp2.txt"
n = 1
tabin_filt_1 = tabin %>%
group_by(qseqid, sseqid) %>%
arrange(qseqid, sseqid, evalue, desc(pident), desc(length)) %>%
slice(1)
if (spe1 == spe2) {
# In this study, we only want to study conservation between species and not within species.
# Therefore, the logical thing to do is to run Blast with all possible paired combinations
# without necessarily combining a species against itself. However, programs such as Orthofinder
# and OrthoMCL require a blast of each species against itself. To avoid the introduction of
# paralogs, we will limit the acceptance of only hits that are of a transcript against itself.
tabin_filt_2 = tabin_filt_1[tabin_filt_1$qseqid == tabin_filt_1$sseqid,]
}
if (spe1 != spe2) {
tabin_filt_2 = tabin_filt_1 %>%
group_by(qseqid) %>%
arrange(qseqid, evalue, desc(pident), desc(length)) %>%
slice_head(n = n)
}
